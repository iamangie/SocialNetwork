{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","assets/img/ava_dialogs.jpg","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/MessageItem/MessageItem.js","components/Dialogs/AddMessageForm/AddMessageForm.js","components/Dialogs/Dialogs.js","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.js"],"names":["module","exports","DialogItem","props","path","id","className","style","avatar","src","alt","to","name","MessageItem","message","maxLength300","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","dialogsItems","messagesItems","values","sendMessage","newMessageText","mapStateToPropsForRedirect","state","isAuth","auth","compose","connect","dialogsPage","dispatch","sendMessageCreator","Component"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,2B,oBCA5BD,EAAOC,QAAU,CAAC,OAAS,6B,oBCD3BD,EAAOC,QAAU,IAA0B,yC,yJCgB5BC,EAXI,SAACC,GAClB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACE,6BACE,yBAAKC,UAAWC,IAAMC,OAAQC,IAAKD,IAAQE,IAAI,WAC/C,kBAAC,IAAD,CAASC,GAAIP,GAAOD,EAAMS,Q,kBCJjBC,EAJK,SAACV,GACnB,OAAO,yBAAKG,UAAWC,IAAMO,SAAUX,EAAMW,U,kCCIzCC,EAAeC,YAAiB,KAwBvBC,EAJaC,YAAU,CACpCC,KAAM,wBADoBD,EAlBL,SAACf,GACtB,OACE,0BAAMiB,SAAUjB,EAAMkB,cACpB,6BACE,kBAACC,EAAA,EAAD,CACEC,UAAWC,IACXZ,KAAK,iBACLa,YAAY,qBACZC,SAAU,CAACC,IAAUZ,MAGzB,6BACE,6CCQOa,EAxBC,SAACzB,GACf,IAAM0B,EAAkB1B,EAAM2B,QAAQC,KAAI,SAACC,GAAD,OACxC,kBAAC,EAAD,CAAYpB,KAAMoB,EAAEpB,KAAMP,GAAI2B,EAAE3B,GAAI4B,IAAKD,EAAE3B,QAGvC6B,EAAmB/B,EAAMgC,SAASJ,KAAI,SAACK,GAAD,OAC1C,kBAAC,EAAD,CAAatB,QAASsB,EAAEtB,QAASmB,IAAKG,EAAE/B,QAO1C,OACE,yBAAKC,UAAWC,IAAMuB,SACpB,yBAAKxB,UAAWC,IAAM8B,cAAeR,GACrC,yBAAKvB,UAAWC,IAAM+B,eACpB,6BAAMJ,GACN,kBAAC,EAAD,CAAqBd,SATL,SAACmB,GACrBpC,EAAMqC,YAAYD,EAAOE,sB,gBCZvBC,EAA6B,SAACC,GAAD,MAAY,CAC7CC,OAAQD,EAAME,KAAKD,S,OC6CNE,sBACbC,aAlBsB,SAACJ,GACvB,MAAO,CACLb,QAASa,EAAMK,YAAYlB,QAC3BK,SAAUQ,EAAMK,YAAYb,SAC5BM,eAAgBE,EAAMK,YAAYP,eAClCG,OAAQD,EAAME,KAAKD,WAII,SAACK,GAC1B,MAAO,CACLT,YAAa,SAACC,GACZQ,EAASC,YAAmBT,UDrCF,SAACU,GAU/B,OAJiCJ,YAAQL,EAARK,EALP,SAAC5C,GACzB,OAAKA,EAAMyC,OACJ,kBAACO,EAAchD,GADI,kBAAC,IAAD,CAAUQ,GAAI,gBCwC7BmC,CAGblB","file":"static/js/3.9301a833.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"DialogItem_avatar__12OzI\"};","module.exports = __webpack_public_path__ + \"static/media/ava_dialogs.ba7162f0.jpg\";","import React from \"react\";\nimport style from \"./DialogItem.module.css\";\nimport { NavLink } from \"react-router-dom\";\nimport avatar from \"../../../assets/img/ava_dialogs.jpg\";\n\nconst DialogItem = (props) => {\n  let path = \"/dialogs/\" + props.id;\n\n  return (\n    <div>\n      <img className={style.avatar} src={avatar} alt=\"avatar\" />\n      <NavLink to={path}>{props.name}</NavLink>\n    </div>\n  );\n};\n\nexport default DialogItem;\n","import React from \"react\";\nimport style from \"./MessageItem.module.css\";\n\nconst MessageItem = (props) => {\n  return <div className={style.message}>{props.message}</div>;\n};\n\nexport default MessageItem;\n","import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport {\n  required,\n  maxLengthCreator,\n} from \"../../../utils/validators/validators\";\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\n\nconst maxLength300 = maxLengthCreator(300);\n\nconst AddMessageForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field\n          component={Textarea}\n          name=\"newMessageText\"\n          placeholder=\"Enter your message\"\n          validate={[required, maxLength300]}\n        />\n      </div>\n      <div>\n        <button>Send</button>\n      </div>\n    </form>\n  );\n};\n\nconst AddMessageReduxForm = reduxForm({\n  form: \"dialogAddMessageForm\",\n})(AddMessageForm);\n\nexport default AddMessageReduxForm;\n","import React from \"react\";\nimport style from \"./Dialogs.module.css\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport MessageItem from \"./MessageItem/MessageItem\";\nimport AddMessageReduxForm from \"./AddMessageForm/AddMessageForm\";\n\nconst Dialogs = (props) => {\n  const dialogsElements = props.dialogs.map((d) => (\n    <DialogItem name={d.name} id={d.id} key={d.id} />\n  ));\n\n  const messagesElements = props.messages.map((m) => (\n    <MessageItem message={m.message} key={m.id} />\n  ));\n\n  const addNewMessage = (values) => {\n    props.sendMessage(values.newMessageText);\n  };\n\n  return (\n    <div className={style.dialogs}>\n      <div className={style.dialogsItems}>{dialogsElements}</div>\n      <div className={style.messagesItems}>\n        <div>{messagesElements}</div>\n        <AddMessageReduxForm onSubmit={addNewMessage} />\n      </div>\n    </div>\n  );\n};\n\nexport default Dialogs;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nconst mapStateToPropsForRedirect = (state) => ({\n  isAuth: state.auth.isAuth,\n});\n\nexport const withAuthRedirect = (Component) => {\n  const RedirectComponent = (props) => {\n    if (!props.isAuth) return <Redirect to={\"/login\"} />;\n    return <Component {...props} />;\n  };\n\n  let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(\n    RedirectComponent\n  );\n\n  return ConnectedRedirectComponent;\n};\n","import { sendMessageCreator } from \"../../redux/dialogsReducer\";\nimport Dialogs from \"./Dialogs\";\nimport { connect } from \"react-redux\";\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\n\n// const DialogsContainer = () => {\n//   return (\n//     <StoreContext.Consumer>\n//       {(store) => {\n//         let state = store.getState();\n\n//         const onSendMessageClick = () => {\n//           store.dispatch(sendMessageCreator());\n//         };\n\n//         const onNewMessageChange = (text) => {\n//           store.dispatch(updateNewMessageTextCreator(text));\n//         };\n//         return (\n//           <Dialogs\n//             sendMessage={onSendMessageClick}\n//             updateNewMessageText={onNewMessageChange}\n//             dialogs={state.dialogsPage.dialogs}\n//             messages={state.dialogsPage.messages}\n//             newMessageText={state.newMessageText}\n//           />\n//         );\n//       }}\n//     </StoreContext.Consumer>\n//   );\n// };\n\nconst mapStateToProps = (state) => {\n  return {\n    dialogs: state.dialogsPage.dialogs,\n    messages: state.dialogsPage.messages,\n    newMessageText: state.dialogsPage.newMessageText,\n    isAuth: state.auth.isAuth,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    sendMessage: (newMessageText) => {\n      dispatch(sendMessageCreator(newMessageText));\n    },\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthRedirect\n)(Dialogs);\n"],"sourceRoot":""}